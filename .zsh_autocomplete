#!/bin/zsh

# init zsh autocomplete
autoload -Uz compinit bashcompinit
compinit

# enable bash autocomplete
bashcompinit

# SSH
function _ssh_autocomplete() {
    COMPREPLY=()
    CURRENT_WORD="${COMP_WORDS[COMP_CWORD]}"
    if [[ ${CURRENT_WORD} == -* || ${COMP_CWORD} -eq 1 ]] ; then
        WORD_LIST=$(sed -nE "s/^Host\ ([a-zA-Z0-9].+)$/\1/p" ~/.ssh/config | tr '\n' ' ' )
        COMPREPLY=( $(compgen -W "$WORD_LIST" -- ${CURRENT_WORD}) )
    fi
}
complete -F _ssh_autocomplete ssh

# Makefile
function _makefile_targets {
    local curr_arg;
    local targets;

    # Find makefile targets available in the current directory
    targets=''
    if [[ -e "$(pwd)/Makefile" ]]; then
        targets=$( \
            grep -oE '^[a-zA-Z0-9_-]+:' Makefile \
            | sed 's/://' \
            | tr '\n' ' ' \
        )
    fi

    # Filter targets based on user input to the bash completion
    curr_arg=${COMP_WORDS[COMP_CWORD]}
    COMPREPLY=( $(compgen -W "${targets[@]}" -- $curr_arg ) );
}
complete -F _makefile_targets make

# git autocomplete (for git bundled with command-line tools) 
# if [ -f `xcode-select -p`/usr/share/git-core/git-completion.zsh ]; then
#     . `xcode-select -p`/usr/share/git-core/git-completion.zsh
# fi

# HashiCorp
complete -o nospace  -C /usr/local/bin/nomad nomad
complete -o nospace  -C /usr/local/bin/consul consul
complete -o nospace  -C /usr/local/bin/vault vault

# Docker
if [ -f /Applications/Docker.app/Contents/Resources/etc/docker.zsh-completion ]; then
    . /Applications/Docker.app/Contents/Resources/etc/docker.zsh-completion
fi
if [ -f /Applications/Docker.app/Contents/Resources/etc/docker-compose.zsh-completion ]; then
    . /Applications/Docker.app/Contents/Resources/etc/docker-compose.zsh-completion
fi

# Kubernetes
if [ -f /usr/local/bin/kubectl ]; then
    source <(kubectl completion zsh)
    complete -o default -F __start_kubectl k
elif [ -f /opt/homebrew/bin/kubectl ]; then
    source <(kubectl completion zsh)
    complete -o default -F __start_kubectl k
fi

